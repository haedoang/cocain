<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.co.cocain.repository.mapper.QuizMapper">
	
	<resultMap id="categoryMap" type="QuizCategory">
		<result column="category_no" property="categoryNo"></result>
		<result column="category_name" property="categoryName"></result>
	</resultMap>
	
	<resultMap id="levelMap" type="QuizLevel">
		<result column="level_no" property="levelNo"></result>
		<result column="level_name" property="levelName"></result>
		<result column="level_point" property="levelPoint"></result>
	</resultMap>
	
	<resultMap id="typeMap" type="QuizType">
		<result column="type_no" property="typeNo"></result>
		<result column="type_name" property="typeName"></result>
	</resultMap>
	
	<resultMap id="quizMap" type="QuizBoard">
		<result column="quiz_no" property="quizNo" />
		<result column="type_no" property="typeNo" />
		<result column="category_no" property="categoryNo" />
		<result column="level_no" property="levelNo" />
		<result column="nickname" property="nickname" />
		<result column="title" property="title" />
		<result column="content" property="content" />
		<result column="reg_date" property="regDate" />
		<result column="hint" property="hint" />
		<result column="correct" property="correct" />
		<result column="answer_cnt" property="answerCnt" />
		<result column="try_cnt" property="tryCnt" />
	</resultMap>
	
	<!-- category list -->
	<select id="selectCategory" resultMap="categoryMap">
		select * 
		  from tb_quiz_category
	</select>
	<!-- level list -->
	<select id="selectLevel" resultMap="levelMap">
		select *
		  from tb_quiz_lev
	</select>
	
	
	<!-- paging 적용 test.. -->
	<!-- daily quiz list -->
	<select id="selectDQList" parameterType="QuizPage" resultMap="quizMap">
		select * 
		  from tb_quiz_board
		 where type_no = 1
		order by quiz_no desc
		limit #{begin},10
	</select>
	
	<!-- paging count.. -->
	<select id="selectDQListCount" resultType="int">
		select count(*)
		  from tb_quiz_board
		 where type_no =1 
	</select>
	

	<!-- user quiz list -->
	<select id="selectUQList" parameterType="QuizPage" resultMap="quizMap">
		select * 
		  from tb_quiz_board
		 where type_no = 2
		order by quiz_no desc
		limit #{begin},10
	</select>

	<!-- paging count.. -->
	<select id="selectUQListCount" resultType="int">
		select count(*)
		  from tb_quiz_board
		 where type_no =2 
	</select>
	
	<!-- quiz insert -->
	<insert id="insertQuizBoard" parameterType="QuizBoard">
		insert into tb_quiz_board(
									type_no,
									category_no,
									level_no,
									nickname,
									title,
									content,
									hint,
									correct	
									) values (
												#{typeNo},
												#{categoryNo},
												#{levelNo},
												#{nickname},
												#{title},
												#{content},
												#{hint},
												#{correct}
															)
		
	</insert>

	<!-- 제목, 카테고리 검색 (제목만 먼저 구현하자..카테고리 db써야함;; )  -->
	<select id="selectQuizSearch" parameterType="QuizBoard" resultMap="quizMap">
		select *
		  from tb_quiz_board
	  <where>
		<if test="typeNo!=null">
	    	and	type_no=#{typeNo}
		</if>
		<if test="title!=null">
			and title like concat('%',#{title},'%')
		</if>	
		order by quiz_no desc
		
		<!-- limit page 어떻게 받으면 좋을까~?  -->
	  </where>  
	</select>








	

	<!-- detail...  -->
	
	<select id="selectQuizBoardByNo" parameterType="int" resultMap="quizMap">
		select *
		  from tb_quiz_board
		 where quiz_no = #{quizNo}
	</select>
	
	<!-- 유저퀴즈 정답 찾기 -->
	<select id="selectQuizCorrect" parameterType="QuizBoard" resultType="int">
		select count(*)
		 from tb_quiz_board
		where quiz_no=#{quizNo}
		  and correct=#{correct}
	</select>
	
	<!-- 게시글 삭제하기 -->
	<delete id="deleteQuizBoard" parameterType="int">
		delete from tb_quiz_board
		 where quiz_no=#{quizNo}
	</delete>
	
	
	<!-- paging test -->
	<select id="selectQuizPaging" parameterType="QuizPage" resultMap="quizMap">
		select * 
		  from tb_quiz_board
		 where type_no=1
		 limit #{begin},20;
	</select>
	
	
	
</mapper>

























